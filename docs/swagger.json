{
    "swagger": "2.0",
    "info": {
        "description": "TKOH OMS Backend Server",
        "title": "TKOH OMS",
        "contact": {
            "name": "So Nim Wai"
        },
        "license": {
            "name": "LSCM"
        },
        "version": "0.1"
    },
    "host": "20.239.95.146",
    "basePath": "/oms/",
    "paths": {
        "/addDeliveryOrder": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create adhoc delivery order.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order Management"
                ],
                "summary": "Add Delivery Order.",
                "parameters": [
                    {
                        "description": "Add Delivery Order Parameters",
                        "name": "parameters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AddDeliveryOrderDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/orderManagement.AddDeliveryOrderResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.FailResponse"
                        }
                    }
                }
            }
        },
        "/addRoutine": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create Routine delivery order.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order Management"
                ],
                "summary": "Add Routine.",
                "parameters": [
                    {
                        "description": "Add Routine Parameters",
                        "name": "parameters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AddRoutineDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/orderManagement.AddRoutineResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.FailResponse"
                        }
                    }
                }
            }
        },
        "/cancelDeliveryOrder": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update Non Started Delivery Order .",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order Management"
                ],
                "summary": "Cancel Delivery Order.",
                "parameters": [
                    {
                        "description": "Cancel Delivery Parameters",
                        "name": "todo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CancelDeliveryOrderDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/orderManagement.CancelDeliveryOrderResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.FailResponse"
                        }
                    }
                }
            }
        },
        "/getDeliveryOrder": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get the list of delivery order by order status which start/end at the staff's duty location.",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order Management"
                ],
                "summary": "Get Delivery Order.",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Order Status",
                        "name": "orderStatus",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/orderManagement.OrderListBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.FailResponse"
                        }
                    }
                }
            }
        },
        "/getDutyRooms": {
            "get": {
                "description": "Get the list of location.",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Map Handling"
                ],
                "summary": "Get Duty Rooms.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mapHandling.GetDutyRoomsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.FailResponse"
                        }
                    }
                }
            }
        },
        "/getFloorPlan": {
            "get": {
                "description": "Get UI Floor Plan.",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Map Handling"
                ],
                "summary": "Get Floor Plan.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mapHandling.GetFloorPlanResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.FailResponse"
                        }
                    }
                }
            }
        },
        "/getRoutineDeliveryOrder": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get the list of routine delivery orders.",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order Management"
                ],
                "summary": "Get Routine Delivery Order.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/orderManagement.OrderListBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.FailResponse"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "get the status of server.",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Health"
                ],
                "summary": "Show the status of server.",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/loginAdmin": {
            "post": {
                "description": "Login to OMS.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Login Auth"
                ],
                "summary": "Login to OMS.",
                "parameters": [
                    {
                        "description": "Login Parameters",
                        "name": "todo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LoginAdminDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/loginAuth.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.FailResponse"
                        }
                    }
                }
            }
        },
        "/loginStaff": {
            "post": {
                "description": "Login to OMS.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Login Auth"
                ],
                "summary": "Login to OMS.",
                "parameters": [
                    {
                        "description": "Login Parameters",
                        "name": "todo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LoginStaffDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/loginAuth.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.FailResponse"
                        }
                    }
                }
            }
        },
        "/logout": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Logout from OMS.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Login Auth"
                ],
                "summary": "Logout from OMS.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/loginAuth.LogoutResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.FailResponse"
                        }
                    }
                }
            }
        },
        "/renewToken": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Using Valid Token to renew token before expired",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Login Auth"
                ],
                "summary": "Renew JWT Token.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/loginAuth.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.FailResponse"
                        }
                    }
                }
            }
        },
        "/reportJobStatus": {
            "post": {
                "description": "Receive the delivery job updated status.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order Management"
                ],
                "summary": "Report Job Status.",
                "parameters": [
                    {
                        "description": "Return Job Status Parameters",
                        "name": "todo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ReportJobStatusDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseHeader"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.FailResponse"
                        }
                    }
                }
            }
        },
        "/reportSystemStatus": {
            "post": {
                "description": "Get current system status.",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order Management"
                ],
                "summary": "Report System Status.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/orderManagement.ReportSystemStatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.FailResponse"
                        }
                    }
                }
            }
        },
        "/testAW2": {
            "post": {
                "description": "Get the response of AW2 (Server notify the user which location selected).",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Test"
                ],
                "summary": "Test AW2 websocket response.",
                "parameters": [
                    {
                        "description": "AW2 response",
                        "name": "parameters",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/testHW1": {
            "post": {
                "description": "Get the response of MW1 (Server report robot status and location (every 1s) ).",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Test"
                ],
                "summary": "Test MW1 websocket response.",
                "parameters": [
                    {
                        "description": "MW1 response",
                        "name": "parameters",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/testOW1": {
            "post": {
                "description": "Get the response of OW1 (Server notify any of created order status changed).",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Test"
                ],
                "summary": "Test OW1 websocket response.",
                "parameters": [
                    {
                        "description": "OW1 response",
                        "name": "parameters",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/testSW1": {
            "post": {
                "description": "Get the response of SW1 (Server report robot status and location (every 1s) ).",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Test"
                ],
                "summary": "Test SW1 websocket response.",
                "parameters": [
                    {
                        "description": "SW1 response",
                        "name": "parameters",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/triggerHandlingOrder": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Notify system users are ready to handle the current order.",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order Management"
                ],
                "summary": "Trigger Delivery Order.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order IDs",
                        "name": "orderIds",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Schedule IDs",
                        "name": "scheduleId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/orderManagement.TriggerHandlingOrderResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.FailResponse"
                        }
                    }
                }
            }
        },
        "/updateDeliveryOrder": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update Non Started Delivery Order .",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order Management"
                ],
                "summary": "Update Delivery Order.",
                "parameters": [
                    {
                        "description": "Update Delivery Order Parameters",
                        "name": "todo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateDeliveryOrderDTO"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Processing Status",
                        "name": "processingStatus",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/orderManagement.UpdateDeliveryOrderResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.FailResponse"
                        }
                    }
                }
            }
        },
        "/updateRoutineDeliveryOrder": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update Routine Delivery Order .",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order Management"
                ],
                "summary": "Update Routine Delivery Order.",
                "parameters": [
                    {
                        "description": "Update Delivery Order Parameters",
                        "name": "todo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateRoutineDeliveryOrderDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/orderManagement.UpdateRoutineDeliveryOrderResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.FailResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.AddDeliveryOrderDTO": {
            "type": "object",
            "properties": {
                "endLocationId": {
                    "type": "integer"
                },
                "endLocationName": {
                    "type": "string"
                },
                "expectedDeliveryTime": {
                    "type": "string"
                },
                "expectedStartTime": {
                    "type": "string"
                },
                "numberOfAmrRequire": {
                    "type": "integer"
                },
                "orderType": {
                    "type": "string"
                },
                "startLocationId": {
                    "type": "integer"
                },
                "startLocationName": {
                    "type": "string"
                }
            }
        },
        "dto.AddRoutineDTO": {
            "type": "object",
            "properties": {
                "endLocationId": {
                    "type": "integer"
                },
                "endLocationName": {
                    "type": "string"
                },
                "expectedDeliveryTime": {
                    "type": "string"
                },
                "expectedStartTime": {
                    "type": "string"
                },
                "numberOfAmrRequire": {
                    "type": "integer"
                },
                "orderType": {
                    "type": "string"
                },
                "routinePattern": {
                    "type": "object",
                    "properties": {
                        "day": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "month": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "week": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                },
                "startLocationId": {
                    "type": "integer"
                },
                "startLocationName": {
                    "type": "string"
                }
            }
        },
        "dto.CancelDeliveryOrderDTO": {
            "type": "object",
            "properties": {
                "scheduleId": {
                    "type": "integer"
                }
            }
        },
        "dto.LoginAdminDTO": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.LoginStaffDTO": {
            "type": "object",
            "properties": {
                "dutyLocationId": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.ReportJobStatusDTO": {
            "type": "object",
            "properties": {
                "est": {
                    "type": "string"
                },
                "eta": {
                    "type": "string"
                },
                "jobId": {
                    "type": "integer"
                },
                "location": {
                    "type": "string"
                },
                "messageTime": {
                    "type": "string"
                },
                "processingStatus": {
                    "type": "string"
                },
                "robotId": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateDeliveryOrderDTO": {
            "type": "object",
            "properties": {
                "endLocationId": {
                    "type": "integer"
                },
                "endLocationName": {
                    "type": "string"
                },
                "expectedDeliveryTime": {
                    "type": "string"
                },
                "expectedStartTime": {
                    "type": "string"
                },
                "numberOfAmrRequire": {
                    "type": "integer"
                },
                "scheduleId": {
                    "type": "integer"
                },
                "startLocationId": {
                    "type": "integer"
                },
                "startLocationName": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateRoutineDeliveryOrderDTO": {
            "type": "object",
            "properties": {
                "endLocationId": {
                    "type": "integer"
                },
                "endLocationName": {
                    "type": "string"
                },
                "expectedDeliveryTime": {
                    "type": "string"
                },
                "expectedStartTime": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "numberOfAmrRequire": {
                    "type": "integer"
                },
                "orderType": {
                    "type": "string"
                },
                "routineId": {
                    "type": "integer"
                },
                "routinePattern": {
                    "type": "object",
                    "properties": {
                        "day": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "month": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "week": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                },
                "startLocationId": {
                    "type": "integer"
                },
                "startLocationName": {
                    "type": "string"
                }
            }
        },
        "loginAuth.LoginResponse": {
            "type": "object",
            "properties": {
                "body": {
                    "$ref": "#/definitions/loginAuth.LoginResponseBody"
                },
                "header": {
                    "$ref": "#/definitions/models.ResponseHeader"
                }
            }
        },
        "loginAuth.LoginResponseBody": {
            "type": "object",
            "properties": {
                "authToken": {
                    "type": "string"
                },
                "dutyLocationId": {
                    "type": "integer"
                },
                "dutyLocationName": {
                    "type": "string"
                },
                "loginTime": {
                    "type": "string"
                },
                "tokenExpiryTime": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                },
                "userType": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "loginAuth.LogoutResponse": {
            "type": "object",
            "properties": {
                "header": {
                    "$ref": "#/definitions/models.ResponseHeader"
                }
            }
        },
        "mapHandling.GetDutyRoomsResponse": {
            "type": "object",
            "properties": {
                "body": {
                    "$ref": "#/definitions/mapHandling.LocationListBody"
                },
                "header": {
                    "$ref": "#/definitions/models.ResponseHeader"
                }
            }
        },
        "mapHandling.GetFloorPlanResponse": {
            "type": "object",
            "properties": {
                "body": {
                    "$ref": "#/definitions/mapHandling.MapListBody"
                },
                "header": {
                    "$ref": "#/definitions/models.ResponseHeader"
                }
            }
        },
        "mapHandling.LocationListBody": {
            "type": "object",
            "properties": {
                "locationList": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "locationId": {
                                "type": "integer"
                            },
                            "locationName": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "mapHandling.MapListBody": {
            "type": "object",
            "properties": {
                "mapList": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "floorId": {
                                "type": "integer"
                            },
                            "floorImage": {
                                "type": "string"
                            },
                            "floorName": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "models.FailResponse": {
            "type": "object",
            "properties": {
                "header": {
                    "$ref": "#/definitions/models.FailResponseHeader"
                }
            }
        },
        "models.FailResponseHeader": {
            "type": "object",
            "properties": {
                "failedReason": {
                    "type": "string"
                },
                "responseCode": {
                    "type": "integer"
                },
                "responseMessage": {
                    "type": "string"
                }
            }
        },
        "models.ResponseHeader": {
            "type": "object",
            "properties": {
                "responseCode": {
                    "type": "integer"
                },
                "responseMessage": {
                    "type": "string"
                }
            }
        },
        "orderManagement.AddDeliveryOrderResponse": {
            "type": "object",
            "properties": {
                "body": {
                    "$ref": "#/definitions/orderManagement.OrderListBody"
                },
                "header": {
                    "$ref": "#/definitions/models.ResponseHeader"
                }
            }
        },
        "orderManagement.AddRoutineResponse": {
            "type": "object",
            "properties": {
                "body": {
                    "$ref": "#/definitions/orderManagement.RoutineOrderListBody"
                },
                "header": {
                    "$ref": "#/definitions/models.ResponseHeader"
                }
            }
        },
        "orderManagement.CancelDeliveryOrderResponse": {
            "type": "object",
            "properties": {
                "body": {
                    "$ref": "#/definitions/orderManagement.OrderListBody"
                },
                "header": {
                    "$ref": "#/definitions/models.ResponseHeader"
                }
            }
        },
        "orderManagement.OrderListBody": {
            "type": "object",
            "properties": {
                "orderList": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "actualArrivalTime": {
                                "type": "string"
                            },
                            "endLocationId": {
                                "type": "integer"
                            },
                            "endLocationName": {
                                "type": "string"
                            },
                            "expectedArrivalTime": {
                                "type": "string"
                            },
                            "expectedDeliveryTime": {
                                "type": "string"
                            },
                            "expectedStartTime": {
                                "type": "string"
                            },
                            "failedReason": {
                                "type": "string"
                            },
                            "orderCreatedBy": {
                                "type": "integer"
                            },
                            "orderCreatedType": {
                                "type": "string"
                            },
                            "orderId": {
                                "type": "integer"
                            },
                            "orderStatus": {
                                "type": "string"
                            },
                            "orderType": {
                                "type": "string"
                            },
                            "processingStatus": {
                                "type": "string"
                            },
                            "scheduleId": {
                                "type": "integer"
                            },
                            "startLocationId": {
                                "type": "integer"
                            },
                            "startLocationName": {
                                "type": "string"
                            },
                            "startTime": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "orderManagement.ReportSystemStatusResponse": {
            "type": "object",
            "properties": {
                "systemState": {
                    "type": "string"
                },
                "systemStatus": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "orderManagement.RoutineOrderListBody": {
            "type": "object",
            "properties": {
                "routineList": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "endLocationId": {
                                "type": "integer"
                            },
                            "endLocationName": {
                                "type": "string"
                            },
                            "expectedDeliveryTime": {
                                "type": "string"
                            },
                            "expectedStartTime": {
                                "type": "string"
                            },
                            "isActive": {
                                "type": "boolean"
                            },
                            "nextDeliveryDate": {
                                "type": "string"
                            },
                            "numberOfAmrRequire": {
                                "type": "integer"
                            },
                            "orderType": {
                                "type": "string"
                            },
                            "routineCreatedBy": {
                                "type": "integer"
                            },
                            "routineId": {
                                "type": "integer"
                            },
                            "routinePattern": {
                                "$ref": "#/definitions/orderManagement.RoutinePattern"
                            },
                            "startLocationId": {
                                "type": "integer"
                            },
                            "startLocationName": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "orderManagement.RoutinePattern": {
            "type": "object",
            "properties": {
                "day": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "month": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "week": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "orderManagement.TriggerHandlingOrderResponse": {
            "type": "object",
            "properties": {
                "body": {
                    "$ref": "#/definitions/orderManagement.OrderListBody"
                },
                "header": {
                    "$ref": "#/definitions/models.ResponseHeader"
                }
            }
        },
        "orderManagement.UpdateDeliveryOrderResponse": {
            "type": "object",
            "properties": {
                "body": {
                    "$ref": "#/definitions/orderManagement.OrderListBody"
                },
                "header": {
                    "$ref": "#/definitions/models.ResponseHeader"
                }
            }
        },
        "orderManagement.UpdateRoutineDeliveryOrderResponse": {
            "type": "object",
            "properties": {
                "body": {
                    "$ref": "#/definitions/orderManagement.RoutineOrderListBody"
                },
                "header": {
                    "$ref": "#/definitions/models.ResponseHeader"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}