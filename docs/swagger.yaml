basePath: /oms/
definitions:
  dto.AddDeliveryOrderDTO:
    properties:
      endLocationId:
        type: integer
      endLocationName:
        type: string
      expectedDeliveryTime:
        type: string
      expectedStartTime:
        type: string
      numberOfAmrRequire:
        type: integer
      orderType:
        type: string
      startLocationId:
        type: integer
      startLocationName:
        type: string
    type: object
  dto.AddRoutineDTO:
    properties:
      endLocationId:
        type: integer
      endLocationName:
        type: string
      expectedDeliveryTime:
        type: string
      expectedStartTime:
        type: string
      numberOfAmrRequire:
        type: integer
      orderType:
        type: string
      routinePattern:
        properties:
          day:
            items:
              type: integer
            type: array
          month:
            items:
              type: integer
            type: array
          week:
            items:
              type: integer
            type: array
        type: object
      startLocationId:
        type: integer
      startLocationName:
        type: string
    type: object
  dto.CancelDeliveryOrderDTO:
    properties:
      scheduleId:
        type: integer
    type: object
  dto.LoginAdminDTO:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  dto.LoginStaffDTO:
    properties:
      dutyLocationId:
        type: integer
      username:
        type: string
    type: object
  dto.ReportJobStatusDTO:
    properties:
      est:
        type: string
      eta:
        type: string
      jobId:
        type: integer
      location:
        type: string
      messageTime:
        type: string
      processingStatus:
        type: string
      robotId:
        type: string
      status:
        type: string
      zone:
        type: string
    type: object
  dto.UpdateDeliveryOrderDTO:
    properties:
      endLocationId:
        type: integer
      endLocationName:
        type: string
      expectedDeliveryTime:
        type: string
      expectedStartTime:
        type: string
      numberOfAmrRequire:
        type: integer
      scheduleId:
        type: integer
      startLocationId:
        type: integer
      startLocationName:
        type: string
    type: object
  dto.UpdateRoutineDeliveryOrderDTO:
    properties:
      endLocationId:
        type: integer
      endLocationName:
        type: string
      expectedDeliveryTime:
        type: string
      expectedStartTime:
        type: string
      isActive:
        type: boolean
      numberOfAmrRequire:
        type: integer
      orderType:
        type: string
      routineId:
        type: integer
      routinePattern:
        properties:
          day:
            items:
              type: integer
            type: array
          month:
            items:
              type: integer
            type: array
          week:
            items:
              type: integer
            type: array
        type: object
      startLocationId:
        type: integer
      startLocationName:
        type: string
    type: object
  loginAuth.LoginResponse:
    properties:
      body:
        $ref: '#/definitions/loginAuth.LoginResponseBody'
      header:
        $ref: '#/definitions/models.ResponseHeader'
    type: object
  loginAuth.LoginResponseBody:
    properties:
      authToken:
        type: string
      dutyLocationId:
        type: integer
      dutyLocationName:
        type: string
      loginTime:
        type: string
      tokenExpiryTime:
        type: string
      userId:
        type: integer
      userType:
        type: string
      username:
        type: string
    type: object
  loginAuth.LogoutResponse:
    properties:
      header:
        $ref: '#/definitions/models.ResponseHeader'
    type: object
  mapHandling.GetDutyRoomsResponse:
    properties:
      body:
        $ref: '#/definitions/mapHandling.LocationListBody'
      header:
        $ref: '#/definitions/models.ResponseHeader'
    type: object
  mapHandling.GetFloorPlanResponse:
    properties:
      body:
        $ref: '#/definitions/mapHandling.MapListBody'
      header:
        $ref: '#/definitions/models.ResponseHeader'
    type: object
  mapHandling.LocationListBody:
    properties:
      locationList:
        items:
          properties:
            locationId:
              type: integer
            locationName:
              type: string
          type: object
        type: array
    type: object
  mapHandling.MapListBody:
    properties:
      mapList:
        items:
          properties:
            floorId:
              type: integer
            floorImage:
              type: string
            floorName:
              type: string
          type: object
        type: array
    type: object
  models.FailResponse:
    properties:
      header:
        $ref: '#/definitions/models.FailResponseHeader'
    type: object
  models.FailResponseHeader:
    properties:
      failedReason:
        type: string
      responseCode:
        type: integer
      responseMessage:
        type: string
    type: object
  models.ResponseHeader:
    properties:
      responseCode:
        type: integer
      responseMessage:
        type: string
    type: object
  orderManagement.AddDeliveryOrderResponse:
    properties:
      body:
        $ref: '#/definitions/orderManagement.OrderListBody'
      header:
        $ref: '#/definitions/models.ResponseHeader'
    type: object
  orderManagement.AddRoutineResponse:
    properties:
      body:
        $ref: '#/definitions/orderManagement.RoutineOrderListBody'
      header:
        $ref: '#/definitions/models.ResponseHeader'
    type: object
  orderManagement.CancelDeliveryOrderResponse:
    properties:
      body:
        $ref: '#/definitions/orderManagement.OrderListBody'
      header:
        $ref: '#/definitions/models.ResponseHeader'
    type: object
  orderManagement.OrderListBody:
    properties:
      orderList:
        items:
          properties:
            actualArrivalTime:
              type: string
            endLocationId:
              type: integer
            endLocationName:
              type: string
            expectedArrivalTime:
              type: string
            expectedDeliveryTime:
              type: string
            expectedStartTime:
              type: string
            failedReason:
              type: string
            orderCreatedBy:
              type: integer
            orderCreatedType:
              type: string
            orderId:
              type: integer
            orderStatus:
              type: string
            orderType:
              type: string
            processingStatus:
              type: string
            scheduleId:
              type: integer
            startLocationId:
              type: integer
            startLocationName:
              type: string
            startTime:
              type: string
          type: object
        type: array
    type: object
  orderManagement.ReportSystemStatusResponse:
    properties:
      systemState:
        type: string
      systemStatus:
        items:
          type: string
        type: array
    type: object
  orderManagement.RoutineOrderListBody:
    properties:
      routineList:
        items:
          properties:
            endLocationId:
              type: integer
            endLocationName:
              type: string
            expectedDeliveryTime:
              type: string
            expectedStartTime:
              type: string
            isActive:
              type: boolean
            nextDeliveryDate:
              type: string
            numberOfAmrRequire:
              type: integer
            orderType:
              type: string
            routineCreatedBy:
              type: integer
            routineId:
              type: integer
            routinePattern:
              $ref: '#/definitions/orderManagement.RoutinePattern'
            startLocationId:
              type: integer
            startLocationName:
              type: string
          type: object
        type: array
    type: object
  orderManagement.RoutinePattern:
    properties:
      day:
        items:
          type: integer
        type: array
      month:
        items:
          type: integer
        type: array
      week:
        items:
          type: integer
        type: array
    type: object
  orderManagement.TriggerHandlingOrderResponse:
    properties:
      body:
        $ref: '#/definitions/orderManagement.OrderListBody'
      header:
        $ref: '#/definitions/models.ResponseHeader'
    type: object
  orderManagement.UpdateDeliveryOrderResponse:
    properties:
      body:
        $ref: '#/definitions/orderManagement.OrderListBody'
      header:
        $ref: '#/definitions/models.ResponseHeader'
    type: object
  orderManagement.UpdateRoutineDeliveryOrderResponse:
    properties:
      body:
        $ref: '#/definitions/orderManagement.RoutineOrderListBody'
      header:
        $ref: '#/definitions/models.ResponseHeader'
    type: object
host: 20.239.95.146
info:
  contact:
    name: So Nim Wai
  description: TKOH OMS Backend Server
  license:
    name: LSCM
  title: TKOH OMS
  version: "0.1"
paths:
  /addDeliveryOrder:
    post:
      consumes:
      - application/json
      description: Create adhoc delivery order.
      parameters:
      - description: Add Delivery Order Parameters
        in: body
        name: parameters
        required: true
        schema:
          $ref: '#/definitions/dto.AddDeliveryOrderDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/orderManagement.AddDeliveryOrderResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.FailResponse'
      security:
      - Bearer: []
      summary: Add Delivery Order.
      tags:
      - Order Management
  /addRoutine:
    post:
      consumes:
      - application/json
      description: Create Routine delivery order.
      parameters:
      - description: Add Routine Parameters
        in: body
        name: parameters
        required: true
        schema:
          $ref: '#/definitions/dto.AddRoutineDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/orderManagement.AddRoutineResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.FailResponse'
      security:
      - Bearer: []
      summary: Add Routine.
      tags:
      - Order Management
  /cancelDeliveryOrder:
    post:
      consumes:
      - application/json
      description: Update Non Started Delivery Order .
      parameters:
      - description: Cancel Delivery Parameters
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/dto.CancelDeliveryOrderDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/orderManagement.CancelDeliveryOrderResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.FailResponse'
      security:
      - Bearer: []
      summary: Cancel Delivery Order.
      tags:
      - Order Management
  /getDeliveryOrder:
    get:
      consumes:
      - '*/*'
      description: Get the list of delivery order by order status which start/end
        at the staff's duty location.
      parameters:
      - collectionFormat: csv
        description: Order Status
        in: query
        items:
          type: string
        name: orderStatus
        required: true
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/orderManagement.OrderListBody'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.FailResponse'
      security:
      - Bearer: []
      summary: Get Delivery Order.
      tags:
      - Order Management
  /getDutyRooms:
    get:
      consumes:
      - '*/*'
      description: Get the list of location.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/mapHandling.GetDutyRoomsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.FailResponse'
      summary: Get Duty Rooms.
      tags:
      - Map Handling
  /getFloorPlan:
    get:
      consumes:
      - '*/*'
      description: Get UI Floor Plan.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/mapHandling.GetFloorPlanResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.FailResponse'
      summary: Get Floor Plan.
      tags:
      - Map Handling
  /getRoutineDeliveryOrder:
    get:
      consumes:
      - '*/*'
      description: Get the list of routine delivery orders.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/orderManagement.OrderListBody'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.FailResponse'
      security:
      - Bearer: []
      summary: Get Routine Delivery Order.
      tags:
      - Order Management
  /health:
    get:
      consumes:
      - '*/*'
      description: get the status of server.
      produces:
      - text/plain
      responses:
        "200":
          description: OK
      summary: Show the status of server.
      tags:
      - Health
  /loginAdmin:
    post:
      consumes:
      - application/json
      description: Login to OMS.
      parameters:
      - description: Login Parameters
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/dto.LoginAdminDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/loginAuth.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.FailResponse'
      summary: Login to OMS.
      tags:
      - Login Auth
  /loginStaff:
    post:
      consumes:
      - application/json
      description: Login to OMS.
      parameters:
      - description: Login Parameters
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/dto.LoginStaffDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/loginAuth.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.FailResponse'
      summary: Login to OMS.
      tags:
      - Login Auth
  /logout:
    get:
      consumes:
      - application/json
      description: Logout from OMS.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/loginAuth.LogoutResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.FailResponse'
      security:
      - Bearer: []
      summary: Logout from OMS.
      tags:
      - Login Auth
  /renewToken:
    get:
      consumes:
      - '*/*'
      description: Using Valid Token to renew token before expired
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/loginAuth.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.FailResponse'
      security:
      - Bearer: []
      summary: Renew JWT Token.
      tags:
      - Login Auth
  /reportJobStatus:
    post:
      consumes:
      - application/json
      description: Receive the delivery job updated status.
      parameters:
      - description: Return Job Status Parameters
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/dto.ReportJobStatusDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseHeader'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.FailResponse'
      summary: Report Job Status.
      tags:
      - Order Management
  /reportSystemStatus:
    post:
      consumes:
      - '*/*'
      description: Get current system status.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/orderManagement.ReportSystemStatusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.FailResponse'
      summary: Report System Status.
      tags:
      - Order Management
  /testAW2:
    post:
      description: Get the response of AW2 (Server notify the user which location
        selected).
      parameters:
      - description: AW2 response
        in: body
        name: parameters
        schema:
          type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
      summary: Test AW2 websocket response.
      tags:
      - Test
  /testHW1:
    post:
      description: Get the response of MW1 (Server report robot status and location
        (every 1s) ).
      parameters:
      - description: MW1 response
        in: body
        name: parameters
        schema:
          type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
      summary: Test MW1 websocket response.
      tags:
      - Test
  /testOW1:
    post:
      description: Get the response of OW1 (Server notify any of created order status
        changed).
      parameters:
      - description: OW1 response
        in: body
        name: parameters
        schema:
          type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
      summary: Test OW1 websocket response.
      tags:
      - Test
  /testSW1:
    post:
      description: Get the response of SW1 (Server report robot status and location
        (every 1s) ).
      parameters:
      - description: SW1 response
        in: body
        name: parameters
        schema:
          type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
      summary: Test SW1 websocket response.
      tags:
      - Test
  /triggerHandlingOrder:
    get:
      consumes:
      - '*/*'
      description: Notify system users are ready to handle the current order.
      parameters:
      - description: Order IDs
        in: query
        name: orderIds
        type: integer
      - description: Schedule IDs
        in: query
        name: scheduleId
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/orderManagement.TriggerHandlingOrderResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.FailResponse'
      security:
      - Bearer: []
      summary: Trigger Delivery Order.
      tags:
      - Order Management
  /updateDeliveryOrder:
    post:
      consumes:
      - application/json
      description: Update Non Started Delivery Order .
      parameters:
      - description: Update Delivery Order Parameters
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateDeliveryOrderDTO'
      - description: Processing Status
        in: query
        name: processingStatus
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/orderManagement.UpdateDeliveryOrderResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.FailResponse'
      security:
      - Bearer: []
      summary: Update Delivery Order.
      tags:
      - Order Management
  /updateRoutineDeliveryOrder:
    post:
      consumes:
      - application/json
      description: Update Routine Delivery Order .
      parameters:
      - description: Update Delivery Order Parameters
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateRoutineDeliveryOrderDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/orderManagement.UpdateRoutineDeliveryOrderResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.FailResponse'
      security:
      - Bearer: []
      summary: Update Routine Delivery Order.
      tags:
      - Order Management
securityDefinitions:
  Bearer:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
